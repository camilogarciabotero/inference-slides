{"title":"An introduction to R","markdown":{"yaml":{"title":"An introduction to R","subtitle":"https://bit.ly/3ZRsbnA","author":[{"name":"Camilo G.","email":"ca.garcia2@uniandes.edu.co"},{"name":"Alejandra S.","email":"m.soto2@uniandes.edu.co"},{"name":"Ronald D.","email":"r.diazf@uniandes.edu.co"},{"name":"Andrew C.","email":"aj.crawford244@uniandes.edu.co"},{"name":"Mauricio S.","email":"om.santos@uniandes.edu.co"}],"format":{"revealjs":{"footer":"BIOL2205 - Inferencia e Informática - DCB - Uniandes\n","standalone":true,"preview-links":"auto","center":true,"slide-number":true,"fig-align":"center","code-line-numbers":false,"overview":true,"code-link":true,"code-annotations":"hover","highlight-style":"ayu","df-print":"paged","scrollable":true,"theme":"../theme.scss"}}},"headingText":"R and Rstudio","containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: theme-set\n#| eval: true\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nsimple_theme <- theme_bw() +\n    theme(\n        plot.background = element_rect(fill = \"#FDF6E3\"),\n        panel.background = element_rect(fill = \"#FDF6E3\"),\n        legend.background = element_rect(fill = \"#FDF6E3\"),\n        legend.position = \"top\",\n        axis.title = element_text(size = 14)\n    )\n\ntheme_set(simple_theme)\n```\n\n\n\n------------------------------------------------------------------------\n\n![R console](figs/r-fig.png){fig-align=\"center\"}\n\n------------------------------------------------------------------------\n\n![Rstudio IDE](figs/rstudio-fig.png)\n\n------------------------------------------------------------------------\n\n![An script example](figs/script-fig.png)\n\n# Rmarkdown and Dynamic Documents {.smaller}\n\n------------------------------------------------------------------------\n\nThe YAML block\n\n``` r\n---\ntitle: ”My fancy title\"\nauthor: \"Camilo García\"\nformat: html\ndate: 2022-10-05\n---\n```\n\n. . .\n\nSimple text (in Markdown)\n\n``` r\n# Introduction\n\nThis is **Bold** and *italics*\n```\n\n. . .\n\nCode\n\n```{r}\n#| echo: true\n#| label: demo-code\n#| eval: false\n\nlibrary(tidyverse)\nmtcars |> head()\n```\n\n. . .\n\nLaTeX\n\n``` bash\n$$\n\\sum_{i}^{n} x^{i}\n$$\n```\n\n::: footer\n:::\n\n------------------------------------------------------------------------\n\n![](figs/quarto-fig.png){fig-align=\"center\"}\n\n# Installing Packages\n\n------------------------------------------------------------------------\n\nTwo main commands are used to manage packages in R:\n\n1.  Installation:\n\n```{r}\n#| label: installation\n#| eval: false\n#| echo: true\ninstall.packages(\"pkgname\")\n```\n\n. . .\n\n2.  Loading the package:\n\n```{r}\n#| label: loading\n#| eval: false\n#| echo: true\nlibrary(pkgname)\n```\n\n# Getting Help\n\n```{r}\n#| label: help\n#| eval: false\n#| echo: true\nhelp(function)\n?function\nhelp.search(“keyword”)\n```\n\n# Important Syntax\n\n## Creating Objects\n\nAnything that is created in `R` whether it is a vector, matrix, function, data, figures, strings (character), etc. can be *assigned* into an *object* using the `<-` operator:\n\n```{r}\n#| label: assign\n#| echo: true\n#| output-location: fragment\nname <- \"camilo\"\nname\n```\n\n. . .\n\n```{r}\n#| label: assign-mode\n#| echo: true\n#| output-location: fragment\ntypeof(name)\n```\n\n# Main Objects in R\n\n## Vectors\n\nA *vector* is a concatenation of other objects of the same type.\n\n```{r}\n#| label: vectors\n#| echo: true\n\ntime <- c(34, 13, 65, 10) # <1>\n\nseason <- c(\"dry\", \"semidry\", \"rainy\")\n\nheights  <- c(1.60, 1.63, 1.85 ,1.72)\n\n```\n\n## Matrices\n\nA *matrix* is an *array* of objects that are ordered in rows and columns\n\n```{r}\n#| label: matrixes\n#| echo: true\n#| eval: true\n#| code-line-numbers: \"2|3,4,4|6,7,8\"\n#| output-location: fragment\nmx <- matrix(\n    c(23, 58, 98, 54, 68, 74),\n    nrow = 2,\n    ncol = 3,\n    byrow = FALSE,\n    dimnames = list(\n        rows = c(\"rw1\", \"rw2\"),\n        cols = c(\"cl1\", \"cl2\", \"cl3\")\n    )\n)\n\nmx\n```\n\n## Lists\n\nA *list* is a set of ordered *components* (objects with assignments)\n\n```{r}\n#| label: lists\n#| echo: true\n#| output-location: fragment\nstudent_info  <- list(name = \"Alejandro\", exam = 5, quizzes = c(4,5,3.5,4.2))\nstudent_info\n```\n\n# Managing Data\n\n## Manually Generated Data\n\nThe `seq()` function can be used to create a *sequence* of data:\n\n```{r}\n#| label: seq-data\n#| echo: true\n#| output-location: fragment\ndata  <- seq(1,100,10) \ndata\n```\n\n. . .\n\nThe `rep()` function creates *repetitions* of an object $n$ times\n\n```{r}\n#| label: rep-data\n#| echo: true\n#| output-location: fragment\ndata  <- rep(\"Ho\", 3)\ndata\n```\n\n------------------------------------------------------------------------\n\nYou can also generate factors/levels using the `gl()` function.\n\n```{r}\n#| label: gl-data-ex\n#| echo: true\n#| eval: false\ngl(\n    n, # levels \n    k, # replicates\n    length = n * k,\n    labels = c(\"control\", \"treatment\"),\n    ordered = FALSE\n)\n```\n\nlet's try an example:\n\n. . .\n\n```{r}\n#| label: gl-data\n#| echo: true\n#| eval: true\n#| output-location: fragment\n## First control, then treatment:\nexperiment <- gl(2, 8, labels = c(\"Control\", \"Treat\"))\n\nexperiment\n```\n\n------------------------------------------------------------------------\n\nThe `data.frame` object is a native structure/object to store table like data\n\n```{r}\n#| label: df-intro-02\n#| echo: true\n#| eval: true\n#| code-line-numbers: \"1,2|4|6\"\n#| output-location: fragment\nsize  <- c(34,50,40)\ncolor  <- c(\"blue\", \"red\", \"orange\")\n\nfrogs  <- data.frame(size, color)\n\nfrogs\n```\n\n## Importing Data\n\nThere are many function to *import* data to the `R` session. `read.table()` is one of the basic ones:\n\n***\n\n```{r}\n#| label: read-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\nspp_data <- read.table(\n  file = \"data/especies.txt\",\n  sep = \"\\t\",\n  h = TRUE\n)\nspp_data\n```\n\n***\n\nWe can select subsets of the data set using many strategies.\n\n. . .\n\n1. The `$` operator for column subseting:\n```{r}\n#| label: dollar-op\n#| echo: true\n#| eval: true\n#| output-location: fragment\nspp_data$Especie\n```\n***\n\n2. The indexed way:\n\n```{r}\n#| label: index-sub\n#| echo: true\n#| eval: true\n#| output-location: fragment\nspp_data[,2]\n```\n\n***\n\n3. Using a `subset()` and a condition:\n```{r}\n#| label: subset-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\nsubset(spp_data, Prob_presencia > 0)\n```\n\n# Common Operations\n\n***\n\n```{r}\n#| label: operation-table\n#| echo: true\n#| eval: true\n85+12\n56-29\n8*8\n70/100\n2^4\n```\n\n***\n\nImportance of precedence\n\n```{r}\n#| label: expression-01-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\n2+3*2-2^3\n```\n\n. . .\n\n```{r}\n#| label: expression-02-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\n((2+3)*2-2)^3\n```\n\n***\n\nOperations with *vectors*:\n\n```{r}\n#| label: df-intro\n#| echo: true\n#| eval: true\n#| code-line-numbers: \"1|3\"\n#| output-location: fragment\ntime <- c(34, 13, 65, 10)\ntime + 5\n```\n\n. . .\n\nWhat if you want to add another value to the vector:\n\n```{r}\n#| label: vector-add\n#| echo: true\n#| eval: true\n#| output-location: fragment\ntime[5] = 5\ntime\n```\n. . . \n\nSo, the vector is now bigger:\n```{r}\n#| label: vector-length\n#| echo: true\n#| eval: true\n#| output-location: fragment\nlength(time)\n```\n\n# Descriptive Stats\n\n***\n\nThe simplest way to generate descriptive stats of a dataset is using `summary()` function.\n\n```{r}\n#| label: summary-length\n#| echo: true\n#| eval: true\n#| output-location: fragment\nsummary(spp_data)\n```\n\n# Inspecting Data\n\n***\n\n[![From Data to Viz](figs/data-to-vis.png)](https://www.data-to-viz.com/index.html)\n\n***\nLet's create an histogram, using base `hist()` function:\n```{r}\n#| code-fold: true\nhist(x = spp_data$Prob_presencia)\n```\n\n","srcMarkdownNoYaml":"\n\n\n```{r}\n#| label: theme-set\n#| eval: true\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nsimple_theme <- theme_bw() +\n    theme(\n        plot.background = element_rect(fill = \"#FDF6E3\"),\n        panel.background = element_rect(fill = \"#FDF6E3\"),\n        legend.background = element_rect(fill = \"#FDF6E3\"),\n        legend.position = \"top\",\n        axis.title = element_text(size = 14)\n    )\n\ntheme_set(simple_theme)\n```\n\n\n# R and Rstudio\n\n------------------------------------------------------------------------\n\n![R console](figs/r-fig.png){fig-align=\"center\"}\n\n------------------------------------------------------------------------\n\n![Rstudio IDE](figs/rstudio-fig.png)\n\n------------------------------------------------------------------------\n\n![An script example](figs/script-fig.png)\n\n# Rmarkdown and Dynamic Documents {.smaller}\n\n------------------------------------------------------------------------\n\nThe YAML block\n\n``` r\n---\ntitle: ”My fancy title\"\nauthor: \"Camilo García\"\nformat: html\ndate: 2022-10-05\n---\n```\n\n. . .\n\nSimple text (in Markdown)\n\n``` r\n# Introduction\n\nThis is **Bold** and *italics*\n```\n\n. . .\n\nCode\n\n```{r}\n#| echo: true\n#| label: demo-code\n#| eval: false\n\nlibrary(tidyverse)\nmtcars |> head()\n```\n\n. . .\n\nLaTeX\n\n``` bash\n$$\n\\sum_{i}^{n} x^{i}\n$$\n```\n\n::: footer\n:::\n\n------------------------------------------------------------------------\n\n![](figs/quarto-fig.png){fig-align=\"center\"}\n\n# Installing Packages\n\n------------------------------------------------------------------------\n\nTwo main commands are used to manage packages in R:\n\n1.  Installation:\n\n```{r}\n#| label: installation\n#| eval: false\n#| echo: true\ninstall.packages(\"pkgname\")\n```\n\n. . .\n\n2.  Loading the package:\n\n```{r}\n#| label: loading\n#| eval: false\n#| echo: true\nlibrary(pkgname)\n```\n\n# Getting Help\n\n```{r}\n#| label: help\n#| eval: false\n#| echo: true\nhelp(function)\n?function\nhelp.search(“keyword”)\n```\n\n# Important Syntax\n\n## Creating Objects\n\nAnything that is created in `R` whether it is a vector, matrix, function, data, figures, strings (character), etc. can be *assigned* into an *object* using the `<-` operator:\n\n```{r}\n#| label: assign\n#| echo: true\n#| output-location: fragment\nname <- \"camilo\"\nname\n```\n\n. . .\n\n```{r}\n#| label: assign-mode\n#| echo: true\n#| output-location: fragment\ntypeof(name)\n```\n\n# Main Objects in R\n\n## Vectors\n\nA *vector* is a concatenation of other objects of the same type.\n\n```{r}\n#| label: vectors\n#| echo: true\n\ntime <- c(34, 13, 65, 10) # <1>\n\nseason <- c(\"dry\", \"semidry\", \"rainy\")\n\nheights  <- c(1.60, 1.63, 1.85 ,1.72)\n\n```\n\n## Matrices\n\nA *matrix* is an *array* of objects that are ordered in rows and columns\n\n```{r}\n#| label: matrixes\n#| echo: true\n#| eval: true\n#| code-line-numbers: \"2|3,4,4|6,7,8\"\n#| output-location: fragment\nmx <- matrix(\n    c(23, 58, 98, 54, 68, 74),\n    nrow = 2,\n    ncol = 3,\n    byrow = FALSE,\n    dimnames = list(\n        rows = c(\"rw1\", \"rw2\"),\n        cols = c(\"cl1\", \"cl2\", \"cl3\")\n    )\n)\n\nmx\n```\n\n## Lists\n\nA *list* is a set of ordered *components* (objects with assignments)\n\n```{r}\n#| label: lists\n#| echo: true\n#| output-location: fragment\nstudent_info  <- list(name = \"Alejandro\", exam = 5, quizzes = c(4,5,3.5,4.2))\nstudent_info\n```\n\n# Managing Data\n\n## Manually Generated Data\n\nThe `seq()` function can be used to create a *sequence* of data:\n\n```{r}\n#| label: seq-data\n#| echo: true\n#| output-location: fragment\ndata  <- seq(1,100,10) \ndata\n```\n\n. . .\n\nThe `rep()` function creates *repetitions* of an object $n$ times\n\n```{r}\n#| label: rep-data\n#| echo: true\n#| output-location: fragment\ndata  <- rep(\"Ho\", 3)\ndata\n```\n\n------------------------------------------------------------------------\n\nYou can also generate factors/levels using the `gl()` function.\n\n```{r}\n#| label: gl-data-ex\n#| echo: true\n#| eval: false\ngl(\n    n, # levels \n    k, # replicates\n    length = n * k,\n    labels = c(\"control\", \"treatment\"),\n    ordered = FALSE\n)\n```\n\nlet's try an example:\n\n. . .\n\n```{r}\n#| label: gl-data\n#| echo: true\n#| eval: true\n#| output-location: fragment\n## First control, then treatment:\nexperiment <- gl(2, 8, labels = c(\"Control\", \"Treat\"))\n\nexperiment\n```\n\n------------------------------------------------------------------------\n\nThe `data.frame` object is a native structure/object to store table like data\n\n```{r}\n#| label: df-intro-02\n#| echo: true\n#| eval: true\n#| code-line-numbers: \"1,2|4|6\"\n#| output-location: fragment\nsize  <- c(34,50,40)\ncolor  <- c(\"blue\", \"red\", \"orange\")\n\nfrogs  <- data.frame(size, color)\n\nfrogs\n```\n\n## Importing Data\n\nThere are many function to *import* data to the `R` session. `read.table()` is one of the basic ones:\n\n***\n\n```{r}\n#| label: read-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\nspp_data <- read.table(\n  file = \"data/especies.txt\",\n  sep = \"\\t\",\n  h = TRUE\n)\nspp_data\n```\n\n***\n\nWe can select subsets of the data set using many strategies.\n\n. . .\n\n1. The `$` operator for column subseting:\n```{r}\n#| label: dollar-op\n#| echo: true\n#| eval: true\n#| output-location: fragment\nspp_data$Especie\n```\n***\n\n2. The indexed way:\n\n```{r}\n#| label: index-sub\n#| echo: true\n#| eval: true\n#| output-location: fragment\nspp_data[,2]\n```\n\n***\n\n3. Using a `subset()` and a condition:\n```{r}\n#| label: subset-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\nsubset(spp_data, Prob_presencia > 0)\n```\n\n# Common Operations\n\n***\n\n```{r}\n#| label: operation-table\n#| echo: true\n#| eval: true\n85+12\n56-29\n8*8\n70/100\n2^4\n```\n\n***\n\nImportance of precedence\n\n```{r}\n#| label: expression-01-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\n2+3*2-2^3\n```\n\n. . .\n\n```{r}\n#| label: expression-02-table\n#| echo: true\n#| eval: true\n#| output-location: fragment\n((2+3)*2-2)^3\n```\n\n***\n\nOperations with *vectors*:\n\n```{r}\n#| label: df-intro\n#| echo: true\n#| eval: true\n#| code-line-numbers: \"1|3\"\n#| output-location: fragment\ntime <- c(34, 13, 65, 10)\ntime + 5\n```\n\n. . .\n\nWhat if you want to add another value to the vector:\n\n```{r}\n#| label: vector-add\n#| echo: true\n#| eval: true\n#| output-location: fragment\ntime[5] = 5\ntime\n```\n. . . \n\nSo, the vector is now bigger:\n```{r}\n#| label: vector-length\n#| echo: true\n#| eval: true\n#| output-location: fragment\nlength(time)\n```\n\n# Descriptive Stats\n\n***\n\nThe simplest way to generate descriptive stats of a dataset is using `summary()` function.\n\n```{r}\n#| label: summary-length\n#| echo: true\n#| eval: true\n#| output-location: fragment\nsummary(spp_data)\n```\n\n# Inspecting Data\n\n***\n\n[![From Data to Viz](figs/data-to-vis.png)](https://www.data-to-viz.com/index.html)\n\n***\nLet's create an histogram, using base `hist()` function:\n```{r}\n#| code-fold: true\nhist(x = spp_data$Prob_presencia)\n```\n\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"center","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","highlight-style":"ayu","output-file":"01-introduction.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.7.33","auto-stretch":true,"title":"An introduction to R","subtitle":"https://bit.ly/3ZRsbnA","author":[{"name":"Camilo G.","email":"ca.garcia2@uniandes.edu.co"},{"name":"Alejandra S.","email":"m.soto2@uniandes.edu.co"},{"name":"Ronald D.","email":"r.diazf@uniandes.edu.co"},{"name":"Andrew C.","email":"aj.crawford244@uniandes.edu.co"},{"name":"Mauricio S.","email":"om.santos@uniandes.edu.co"}],"footer":"BIOL2205 - Inferencia e Informática - DCB - Uniandes\n","previewLinks":"auto","center":true,"slideNumber":true,"overview":true,"code-annotations":"hover","scrollable":true,"theme":"../theme.scss"}}},"projectFormats":["html"]}