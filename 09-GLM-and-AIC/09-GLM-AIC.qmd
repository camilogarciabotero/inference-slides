---
title: GLM & AIC
subtitle: "https://tinyurl.com/29wkzwwj"
author:
  - name: Camilo G.
    email: ca.garcia2@uniandes.edu.co

  - name: "Kevin J."
    email: d.vivasb@uniandes.edu.co

  - name: "Victor A."
    email: v.nascimento@uniandes.edu.co
format:
  revealjs:
    footer: |
      BIOL2205 - IeI - Universidad de los Andes
    standalone: true
    preview-links: auto
    center: true
    slide-number: true
    fig-align: center
    code-line-numbers: false
    overview: true
    code-link: true
    code-annotations: hover
    highlight-style: ayu
    df-print: paged
    scrollable: true
    fig-height: 5
    fig-width: 5
    fig-dpi: 350
    theme: ../theme.scss
    bibliography: ../references.bib
---

```{r}
#| label: theme-set
#| eval: true
library(tidyverse)
library(palmerpenguins)
library(performance)
library(ggpmisc)

simple_theme <- theme_bw() +
    theme(
        plot.background = element_rect(fill = "#FDF6E3"),
        panel.background = element_rect(fill = "#FDF6E3"),
        legend.background = element_rect(fill = "#FDF6E3"),
        legend.position = "bottom",
        axis.title = element_text(size = 14)
    )

theme_set(simple_theme)
```

## Generalized Linear Models (GLM)

------------------------------------------------------------------------

We have assume data (and residuals) follow a *normal* distribution for regular lineal models, but what if that does not always happen?

::: incremental
1.  Structural component ($\eta = \beta x$)

2.  Link function ($\eta = g(\mu)$)[^1]

3.  Random component (Normal, Binomial, Poisson, Neg. Binomial, etc.)
:::

[^1]: An equation that delinearizes the mathematical relationship between the predictor and the outcome. It is a *transformation* of the predictors

------------------------------------------------------------------------

## What regression should we apply? {.smaller}


It depends on the *outcome datatype* and on the *errors distribution* of the model.


| Regression       | Outcome variable               | Errors distribution | Link function |
|----------------|------------------------|----------------|----------------|
| Regular/Estandar | Continuos                      | Normal              | Indentity     |
| Logistic         | Discrete (two-level factor - **binary**)    | Binomial            | Logit         |
| Poisson          | Skewed discrete (counts)       | Poisson             | Log           |
| Neg. Binomial    | Discrete (counts)              | Neg. Binomial       | Inverse       |
| Gamma            | Skewed **positive** continuous | Gamma               | Reciprocal    |

------------------------------------------------------------------------

## Let's try it in R:

***

```{r}
library(palmerpenguins)
```

```{r}
#| label: binsex
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
adelies <- penguins |>
  filter(species == "Adelie") |>
  drop_na() |>
  mutate(binarysex = case_when(
    sex == "male" ~ 1,
    sex == "female" ~ 0
  ))
```

Let's create the GLM for to predict a penguin's sex based on it's body mass:

. . . 

```{r}
#| label: glm
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
binarysexmodel <- glm(binarysex ~ body_mass_g, data = adelies, family = "binomial")
```

. . .

Let's see what the outout is:

. . .  

```{r}
binarysexmodel
```

*** 

#### What did we do?

```{r}
#| label: glm-report
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
report::report(binarysexmodel)
```

***

## Let's put that on a plot

***

```{r}
#| label: logistic-sex-01
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: column-fragment
ggplot(adelies, 
    aes(x = body_mass_g, y = binarysex)) +
  geom_point() +
  geom_smooth(
    method = "glm", 
    method.args = list(
      family = "binomial"
      )
    )
```

## Analysis of covariance (ANCOVA)
 
***

ANCOVA is a particular case of a GLM where we have a *categorical* predictor and a *continuous* predictor. The continuous predictor is called a *covariate*.

***

Think in this example:

```{r}
#| label: box01
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: column-fragment
ggplot(adelies, aes(x = sex, y = flipper_length_mm, color = sex)) +
  geom_boxplot() +
  geom_jitter(size = 2, alpha = 0.7, width = 0.1) +
  labs(
    x = "",
    y = "Flipper length (mm)"
  )
```

***

What other variable could be affecting the penguins' flipper length?

. . . 

What if the Body mass has an effect on the flipper length? Let's create an ANCOVA model

```{r}
#| label: ancova-model
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
ancovamodel  <- aov(flipper_length_mm  ~ sex + body_mass_g, data = adelies)
```

. . .

Here is the result:

. . .

```{r}
ancovamodel
```

## Let's see the complete `report`:

```{r}
#| label: ancova-report
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
report::report(ancovamodel)
```

## Akaike Information Criteria (AIC)

------------------------------------------------------------------------

An information theory concept that evaluates mathematical models in terms of its complexity and performance (prediction):

$$AIC=âˆ’2*ln(L)+2*k$$

## Using Broom to evaluate statistical models.

------------------------------------------------------------------------

Tidying model's statistical information and report their performance.

::: incremental
1.  `tidy()` Summarizes and organize the model information

2.  `augment()` Displays all model information for each data point.

3.  `glance()` Summarizes the model performance (AIC, BIC, and others).
:::

***

```{r}
#| label: broom-01
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
broom::tidy(binarysexmodel)
```

. . . 

```{r}
#| label: broom-02
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
broom::augment(binarysexmodel)
```

***

Now let's see the AIC:

```{r}
#| label: broom-03
#| fig-align: center
#| echo: true
#| eval: true
#| output-location: fragment
broom::glance(binarysexmodel)
```